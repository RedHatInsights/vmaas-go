version: '3.4'

services:
  patchimg:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - INSTALL_TOOLS=yes
      target: buildimg
    image: patchman-engine_patchimg

  db:
    container_name: db
    build:
      context: .
      dockerfile: dev/database/Dockerfile
    command: 'postgres -c config_file=/opt/app-root/src/postgresql-cfg/custom.conf'
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    env_file:
      - ./conf/database.env

  db_admin:
    container_name: db_admin
    image: patchman-engine_patchimg
    env_file:
      - ./conf/common.env
      - ./conf/database_admin.env
      - ./conf/gorun.env
    command: ./database_admin/entrypoint.sh
    depends_on:
      - db
      - patchimg
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  db_feed:
    container_name: db_feed
    image: patchman-engine_patchimg
    env_file:
      - ./conf/test.env
      - ./conf/gorun.env
    command: ./scripts/feed_db.sh
    depends_on:
      - db
      - patchimg
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

  platform:
    container_name: platform
    image: patchman-engine_patchimg
    env_file:
      - ./conf/platform.env
    command: ./scripts/entrypoint.sh platform
    restart: unless-stopped
    depends_on:
      - db
      - kafka
      - patchimg
    ports:
      - 9001:9001

  manager:
    container_name: manager
    image: patchman-engine_patchimg
    env_file:
      - ./conf/common.env
      - ./conf/manager.env
      - ./conf/gorun.env
    command: ./scripts/entrypoint.sh manager
    ports:
      - 8080:8080
      - 9080:9080 # metrics
    depends_on:
      - db
      - platform
      - patchimg
    volumes:
      - ./:/go/src/app
    security_opt:
      - label=disable

volumes:
  db-data:
